use ::BBjWidget/BBjWidget.bbj::BBjWidget
use com.basiscomponents.bc.IBCBound
use com.basiscomponents.bc.BCBinder
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow
use com.basiscomponents.ui.theming.Theme

use ::BusinessUIComponents/utils/UIUtils.bbj::UIUtils

class public AbstractBCBoundWidget extends BBjWidget implements IBCBound

    field private BCBinder binder!
    field private IPropertiesManager textPropertiesManager!
    field private BBjColor colorFocusGained! = BBjAPI().getSysGui().makeColor(255,255,255)
    field private BBjColor colorFocusLost! = BBjAPI().getSysGui().makeColor(255,255,255)
    
    field private Theme theme! = Theme.getInstance()

    method protected AbstractBCBoundWidget()
        r = #theme!.getNumProperty("CONTROL_GAINED_FOCUS_RED")
        g = #theme!.getNumProperty("CONTROL_GAINED_FOCUS_GREEN")
        b = #theme!.getNumProperty("CONTROL_GAINED_FOCUS_BLUE")
        #colorFocusGained! = BBjAPI().getSysGui().makeColor(r,g,b,err=*next)
        #colorFocusLost! = #theme!.getBBjBackgroundColor()
        if #getCanvas() <> null() then #setBackgroundColor()    
    methodend
    
    method public BBjChildWindow getChildWindow()
        methodret #getCanvas()
    methodend
    
    method public BBjColor getColorFocusGained()
        methodret #colorFocusGained!
    methodend
    
    method public BBjColor getColorFocusLost()
        methodret #colorFocusLost!
    methodend
    rem -------------------------BCBinder methods--------------------------------
    method public void setBinder(BCBinder binder!)
        #binder! = binder!
    methodend    
    
    method public BCBinder getBinder()
        methodret #binder!
    methodend    
    
    rem ------------------methods to override--------------------------------------
    method public void onSetData()
    methodend
   
    method public void onSetSelection()
    methodend
    
    method public Boolean canSetSelection()
        methodret BBjAPI.TRUE
    methodend
    
    method public Boolean canTerminate()
        methodret BBjAPI.TRUE
    methodend
    
    method public void onSignal(int signal!, Object payload!)
    
    methodend
    
    method public DataRow getFieldsForWrite()
        methodret new DataRow()
    methodend
    
    method public DataRow getFieldsForFieldSelection()
        methodret new DataRow()
    methodend
    
    method protected void setBackgroundColor()
        allControls! = UIUtils.getAllControlsRecursive(new BBjVector(), cast(BBjWindow, #getCanvas()), Boolean.TRUE)
        bgColor! = #theme!.getBBjBackgroundColor()
        it! = allControls!.iterator()
        while it!.hasNext()
            control! = cast(BBjControl, it!.next())
            switch control!.getControlType()
                case BBjControl.TABCTRL_TYPE
                    control!.setBackColor(bgColor!)
                    control!.getParent().setBackColor(bgColor!)
                    tabctrl! = cast(BBjTabCtrl, control!)
                    numTabs = tabctrl!.getNumTabs()
                    if numTabs < 1 then break
                    for i=0 to numTabs - 1
                        tabctrl!.setBackColorAt(i, bgColor!)
                    next i
                    break
                case default
                    control!.setBackColor(bgColor!)
                    break
            swend
        wend
    methodend
    rem ------------------properties manager--------------------------------------

    
classend