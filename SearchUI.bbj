use ::BBjWidget/BBjWidget.bbj::BBjWidget
use ::BusinessUIComponents/bound/AbstractBCBoundWidget.bbj::AbstractBCBoundWidget
use ::BusinessUIComponents/BusinessGrid.bbj::BusinessGrid
use ::BusinessUIComponents/bound/BCErrorHandler.bbj::BCErrorHandler
use ::BusinessUIComponents/bound/WindowHandler.bbj::WindowHandler
use com.basiscomponents.bc.BCBinder
use com.basiscomponents.bc.BusinessComponent
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use java.util.HashMap

use com.basiscomponents.i18n.Props


class public SearchUI

    field protected BBjTopLevelWindow wnd!
    field protected BCBinder binder!
    field protected BBjSysGui sysgui!
    field protected BBjVector componentsWithProperties! = new BBjVector()
    field protected BBjNumber height = 10
    
    field protected BusinessGrid bgrid!
    field protected BCErrorHandler errorhandler!
    field protected WindowHandler windowHandler!
    field protected DataRow selectedRecord!
    field protected BBjInputE quickFilterControl!
    
    field protected BBjMenuButton quickFilterIcon!
    field protected BBjButton buttonOK!
    field protected BBjButton buttonCancel!
    field protected BBjMenuButton buttonBackground!
    
    field protected String title! = "Search"
    field protected BBjString bcName$ = "Search"
    

    method public SearchUI()
        ? 'HIDE'
        #sysgui! = BBjAPI().openSysGui("X0")
        #sysgui!.setRepaintEnabled(0)
        
        if info(3,6)="5" then
            #wnd! = #sysgui!.addWindow(#sysgui!.getAvailableContext(), 100,100,1020,760,"",$41001010$)
        else
            #wnd! = #sysgui!.addWindow(#sysgui!.getAvailableContext(), 100,100,1020,760,"",$40000093$)
        endif
        
        #buttonOK! = #wnd!.addButton(1,560,950,100,20,"OK")
        #buttonOK!.setCallback(#buttonOK!.ON_BUTTON_PUSH, "gridSelect")
        
        #buttonCancel! = #wnd!.addButton(2,660,950,100,20,"Cancel")
        #buttonCancel!.setCallback(#buttonCancel!.ON_BUTTON_PUSH, "onClose")
        
        #buttonBackground! = #wnd!.addMenuButton(3,-2,0,800,20,"")
        #buttonBackground!.setTabTraversable(0)
        #buttonBackground!.setFocusable(0)
        #buttonBackground!.setBorderPainted(1)
        
        #quickFilterControl! = #wnd!.addInputE(#wnd!.getAvailableControlID(), 2, 2, 200, 20)
        #quickFilterControl!.setCallback(BBjAPI.ON_EDIT_MODIFY, #this!,"quickFilter")
        #quickFilterControl!.setCallback(BBjAPI.ON_INPUT_KEYPRESS, #this!,"inputKeyPress")
        
        #quickFilterIcon! = #wnd!.addMenuButton(#wnd!.getAvailableControlID(), 0, 0, 200, 20,"")
        #quickFilterIcon!.setTabTraversable(0)
        #quickFilterIcon!.setFocusable(0)
        
        #wnd!.setCallback(BBjAPI.ON_RESIZE, #this!,"resize")
    methodend
    
    method public void initComponents()
    
        #addBusinessGrid(5,25)
        #addBCErrorHandler(#title!)
        #addWindowHandler(#title!)
        #registerComponentsToBinder()
        
                
        
        #quickFilterControl!.setLocation(#quickFilterControl!.getX(), (#height - #quickFilterControl!.getHeight()) / 2)
        
        
        #buttonBackground!.setSize(#buttonBackground!.getWidth(), #height)
        
        if #bgrid! <> null() then #bgrid!.setLocation(#bgrid!.getX(), #height)
        
        iconS = #quickFilterControl!.getHeight() - 4
        iconX = #quickFilterControl!.getX() + #quickFilterControl!.getWidth() - iconS -2
        iconY = #quickFilterControl!.getY() + 2
        
        #quickFilterIcon!.setSize(iconS, iconS)
        #quickFilterIcon!.setLocation(iconX, iconY)

        #quickFilterIcon!.setImageSize(iconS - 2, iconS - 2)

        
    methodend
    
    method public void setBC(BBjString BC$)
        bc! = eval("new "+BC$+"()")
        #setBC(bc!)
    methodend
    
    method public void setBC(BusinessComponent bc!)
        #binder! = new BCBinder(bc!)
        #binder!.setDebugLevel(1)
        attr! = bc!.getAttributesRecord()
        bcName$ = str(#binder!.getBC())
        while pos("::"=bcName$)>0
            bcName$ = bcName$(pos("::"=bcName$)+2)
        wend
        #bcName$ = bcName$
        entities! = attr!.getFieldAttribute("_ENTITIES", "LABEL", err=*next)
        if entities! = null() then
            #title! = bcName$
        else
            #title! = cast(String, entities!)
        endif
        #registerComponentsToBinder()
    methodend
    
    method public void setTitle(String title!)
        #wnd!.setTitle(title!)
        if #errorhandler! <> null() then #errorhandler!.setTitle(title!)
    methodend
    
    method protected void registerComponentsToBinder()
        if #binder! = null() then methodret
        if #bgrid! <> null() then           #binder!.register(#bgrid!)
        if #errorhandler! <> null() then    #binder!.register(#errorhandler!)
        if #windowHandler! <> null() then   #binder!.register(#windowHandler!)
    methodend
    
    method public void doModal()
        #selectedRecord! = null()
        #binder!.retrieve()
        
        #delayed_resize(null())
        
        #sysgui!.setRepaintEnabled(1)
        #wnd!.setVisible(1)
        #quickFilterControl!.focus()
        
        process_events
        gridSelect:
            rowModel! = #bgrid!.getGrid().getSelectedRow()
            if rowModel! = null() then
               #wnd!.setVisible(0)
               methodret
            endif
            #selectedRecord! = cast(DataRow, rowModel!.asDataRow())
            #wnd!.setVisible(0)
            methodret
        onClose:
            #wnd!.setVisible(0)
    methodend
    
     
    rem ######### add methods for BC bound components #########
    
    method public BCBinder getBinder()
        methodret #binder!
    methodend

    method public void addBusinessGrid(BBjInt x!, BBjInt y!)
        #bgrid! = new BusinessGrid(#wnd!,160,x!,y!,960,480)
        #bgrid!.setSize(x!, #height)
        #bgrid!.setRealm("SGR")
        #componentsWithProperties!.add(#bgrid!)
        #bgrid!.getGrid().setCallback(#bgrid!.getGrid().ON_GRID_DOUBLE_CLICK(), "gridSelect")
    methodend
    
    method public void addBCErrorHandler(String title!)
        #errorhandler! = new BCErrorHandler()
        #errorhandler!.setTitle(title!)
    methodend
    
    method public void addWindowHandler(String pgmName!)
        #wnd!.setTitle(#title!)
        #windowHandler! = new WindowHandler(#wnd!)
        #windowHandler!.setRealm("SWN")
        #windowHandler!.setProgramName(#bcName$)
        #windowHandler!.applyWindowConfig()
        #windowHandler!.setCloseMode(#windowHandler!.CLOSE_MODE_OFF())
        #wnd!.setCallback(BBjAPI().ON_CLOSE, "onClose")
    methodend
    
    
    rem ############## Events ######################
    
    method public void resize(BBjEvent ev!)
        BBjAPI().removeTimer("resize",err=*next)
        BBjAPI().createTimer("resize", .4, #this!, "delayed_resize")
    methodend
    
    method public void delayed_resize(BBjEvent ev!)
        BBjAPI().removeTimer("resize",err=*next)
        w = #wnd!.getWidth()
        h = #wnd!.getHeight()
        #bgrid!.setSize(w-4 ,h-70)
        #buttonBackground!.setSize(w + 4, #buttonBackground!.getHeight())
        
        #buttonOK!.setLocation(w-204, h-25)
        #buttonCancel!.setLocation(w-104, h-25)
    methodend
    

    method public BBjWindow getWindow()
        methodret #wnd!
    methodend

    method public DataRow getSelectedRecord()
        methodret #selectedRecord!
    methodend
    
    method public void applyWindowConfig()
        #windowHandler!.applyWindowConfig()
    methodend
    
    method public void quickFilter(BBjEvent ev!)
        filter! = #quickFilterControl!.getText()
        #bgrid!.getGrid().setQuickFilter(filter!)
    methodend
    
    method public void inputKeyPress(BBjInputKeypressEvent ev!)
        keyCode = ev!.getKeyCode()
        if keyCode = 9 then
            rem tab
            #bgrid!.getGrid().setSelectedRow(0)
            rem must focus first the businessgrid and then the gridexwidget or it will not work
            #bgrid!.focus()
            #bgrid!.getGrid().focus()
        endif
    methodend
    

classend
