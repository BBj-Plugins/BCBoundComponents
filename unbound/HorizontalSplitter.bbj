use ::BBjWidget/BBjWidget.bbj::BBjWidget


class public HorizontalSplitter extends BBjWidget

    field private BBjButton btnClick!
    field private BBjNumber clickCount
    
    field private BBjNumber W
    field private BBjNumber H
    field private BBjChildWindow CwTop!
    field private BBjChildWindow CwBottom!
    field private BBjControl UiwTop!
    field private BBjControl UiwBottom!
    
    field private BBjStaticText Split!
    field private BBjNumber      SplitPos
    field private BBjNumber      dragging=0    
    
    rem --------------------- constructors -------------------------------------
    
    rem /**
    rem  * disabled default constructor
    rem  */
    method private HorizontalSplitter()
    methodend

    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem * @param BBjInt id: the control ID
    rem * @param BBjInt x: x-location
    rem * @param BBjInt y: y-location
    rem * @param BBjInt w: width
    rem * @param BBjInt h: height
    rem */
    method public HorizontalSplitter(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!,y!,w!,h!)
    methodend
    
    rem --------------------- event constant(s) -------------------------------------
    

    rem ---------------------- methods from BBjWidget -------------------------------- 

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        if (f_init!) then

            #W = #getWidth()
            #H = #getHeight()
            
            #SplitPos = int((#H-8)/2)
            #CwTop!     = #getCanvas().addChildWindow(100,0,0,#W,#SplitPos-4-20,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
            #CwBottom!  = #getCanvas().addChildWindow(101,0,#SplitPos+2,#W,#H-#SplitPos-4,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
    
            #Split!     = #getCanvas().addStaticText(200,0,#SplitPos-2,#W,4,"")
    
            #Split!.setCursor(8)
            #Split!.setBackColor(BBjAPI().makeColor("LTGRAY"))
            
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onSplitMouseDown")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_UP,#this!,"onSplitMouseUp")
            #getCanvas().setCallback(BBjAPI.ON_MOUSE_MOVE,#this!,"onSplitMouseMove")
        FI

        
    methodend

    method public BBjChildWindow getTopCanvas()
    
        methodret #CwTop!
        
    methodend

    method public BBjChildWindow getBottomCanvas()
    
        methodret #CwBottom!
        
    methodend
    
    method public void setTopCtrl(BBjControl uiw!)
        
            #UiwTop! = uiw!
            #delayedResize(null())
            
    methodend

    method public void setBottomCtrl(BBjControl uiw!)
        
            #UiwBottom! = uiw!
            #delayedResize(null())
            
    methodend
    
    method public void setSize(BBjNumber w!, BBjNumber h!)

        BBjAPI().removeTimer("delay",err=*next)
        
        ratio = #SplitPos/#H
    
        #H = h!
        #W = w!
        #SplitPos = int(#H*ratio)
        
        
        BBjAPI().createTimer("delay", .01, #this!, "delayedResize")
            
    methodend
    
    method public void delayedResize(BBjTimerEvent ev!)
    
        BBjAPI().removeTimer("delay",err=*next)
        #getCanvas().setSize(#W,#H)
        
        minY = #CwTop!.getY() + 3
        maxY = #CwBottom!.getY() + #CwBottom!.getHeight() - #CwTop!.getY() - 3
        
        if #SplitPos < minY then
            #SplitPos = minY
        endif
        if #SplitPos > maxY then
            #SplitPos = maxY
        endif
        
        #CwTop!.setSize(#W,#SplitPos-4)
        #CwBottom!.setLocation(0,#SplitPos+4)
        #CwBottom!.setSize(#W,#H-#SplitPos-4)
    
        if #UiwTop! <> null() then
            #UiwTop!.setSize(#W,#SplitPos-4)
        fi

        if #UiwBottom! <> null() then

            #UiwBottom!.setSize(#W,#H-#SplitPos-4)
        fi
    
        #Split!.setLocation(0,#SplitPos)
        #Split!.setSize(#W,4)
    
    methodend
    
    method public void onSplitMouseDown(BBjMouseDownEvent ev!)
        #dragging=1
        #CwBottom!.setEnabled(0)
        #CwTop!.setEnabled(0)

        BBjAPI().removeTimer("delay",err=*next)
    methodend
    
    method public void onSplitMouseUp(BBjMouseUpEvent ev!)
        #dragging=0
        #CwBottom!.setEnabled(1)
        #CwTop!.setEnabled(1)
        
        BBjAPI().createTimer("delay", .5, #this!, "delayedResize")
    methodend    

    method public void onSplitMouseMove(BBjMouseMoveEvent ev!)

        if #dragging then
            #SplitPos = min(ev!.getY())
            #Split!.setLocation(0,#SplitPos)
        fi
        
    methodend  
    
    method public void setPosition(BBjNumber Ypos)
        #SplitPos = Ypos
        #delayedResize(null())
    methodend


classend

? 'HIDE'
wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,900,600,"Horizontal Splitter Demo")
wnd!        .setCallback(BBjAPI.ON_CLOSE,"byebye")
wnd!        .setCallback(BBjAPI.ON_RESIZE,"resize")

splitter! = new HorizontalSplitter(wnd!,100,0,0,900,600)

topbtn! = splitter!.getTopCanvas().addButton(100,0,0,200,200,"OBEN")
splitter!.setTopCtrl(topbtn!)

botbtn! = splitter!.getBottomCanvas().addButton(100,0,0,200,200,"UNTEN")
splitter!.setBottomCtrl(botbtn!)

process_events

resize:
  ev! = BBjAPI().getLastEvent()
  splitter!.setSize(ev!.getWidth(),ev!.getHeight())
return

byebye:
    bye