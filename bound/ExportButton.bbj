REM /**
REM  * ExportButton.bbj
REM  * @author mneu
REM  *
REM  */

use ::BusinessUIComponents/bound/BusinessGrid.bbj::BusinessGrid
use ::BusinessUIComponents/bound/ExportDialog.bbj::ExportDialog

use ::BBjWidget/BBjWidget.bbj::BBjWidget

use java.util.HashMap

use ::BusinessUIComponents/configurations/CustomConfigurationsBC.bbj::CustomConfigurationsBC

use com.basiscomponents.db.ResultSetExporter
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.util.DataRowJsonMapper
use com.basiscomponents.db.export.SheetConfiguration
use com.basiscomponents.db.export.ReportDetails
use com.basiscomponents.db.export.ColumnWidthCalculator
use com.basiscomponents.db.BBArrayList

class public ExportButton extends BBjWidget

    field private BBjChildWindow exportButton!
    field private BusinessGrid grid!
    field private CustomConfigurationsBC cfgBC!
    field private BBjString pgmName$
    field private HashMap customReports!

    field private ExportDialog export!
    
    field private BBjWindow mainWindow!
    
    field private Boolean baristaHeaderVisible! = Boolean.FALSE
    
    method private ExportButton()
    methodend

    method public ExportButton(BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber width, BBjNumber height)
    
            #exportButton! =  CAST(BBjChildWindow,wnd!.addChildWindow(203,0,0,100,80,"",$00108800$,BBjAPI().getSysGui().getAvailableContext()))
            #exportButton!.addPanelStyle("tbn")
            #exportButton!.setStyle("width","fit-content")
            #exportButton!.setStyle("width","-moz-fit-content")
            img! = #exportButton!.addStaticText(101,0,0,48,48,"download")
             img!.addStyle("material-icons")
            #exportButton!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onExportButtonPush")
            #mainWindow! = wnd!
    methodend
    
    method public void onExportButtonPush(BBjEvent ev!)
        if #export! = null() then
            #export! = new ExportDialog(#pgmName$, #grid!, #customReports!)
        endif
    
        #export!.setConfigurationsBC(#cfgBC!)
        #export!.setBaristaHeaderVisible(#baristaHeaderVisible!)
        #export!.createDialogWindow()
    methodend
    
    method public void setGrid(BusinessGrid grid!)
        #grid! = grid!
    methodend
    
    method public void setBC(CustomConfigurationsBC cfgBC!)
        #cfgBC! = cfgBC!
    methodend
    
    method public void setBaristaHeaderVisible(Boolean visible!)
        #baristaHeaderVisible! = visible!
        
        if #export! = null() then
            #export! = new ExportDialog(#pgmName$, #grid!, #customReports!)
        endif
        
        #export!.setBaristaHeaderVisible(#baristaHeaderVisible!)
    methodend
    
    method public void setProgramName(BBjString pgmName$)
        #pgmName$ = pgmName$
    methodend
    
    method public void setImageFile(BBjString imageFilePath$)
        #exportButton!.setImageFile(imageFilePath$)
        #setImageSize(#exportButton!.getWidth()-4, #exportButton!.getWidth()-4)
    methodend

    method public void setImage(BBjImage image!)
        #exportButton!.setImage(image!)
        #setImageSize(#exportButton!.getWidth()-4, #exportButton!.getWidth()-4)
    methodend
    
    method public void setSize(BBjNumber width, BBjNumber height)
        #exportButton!.setSize(width, height)
        #setImageSize(width-4, height-4)
    methodend
    
    method public void setImageSize(BBjNumber width, BBjNumber height)
        #exportButton!.setImageSize(width, height)
    methodend
    
    method public void setBackColor(BBjColor color!)
        #exportButton!.setBackColor(color!)
    methodend
    
    method public void setCustomReports(HashMap customReports!)
        #customReports! = customReports!
    methodend
    
    method public BBjChildWindow getButton()
    	methodret #exportButton!
    methodend
    
classend