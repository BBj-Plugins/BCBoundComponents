REM /**
REM  * BCErrorHandler.bbj
REM  * @author jcorea
REM  *
REM  * an error handler that reacts to the error signal from BCBinder
REM  */

use ::BusinessUIComponents/AbstractBCBoundWidget.bbj::AbstractBCBoundWidget
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use ::BusinessUIComponents/configurations/PropertiesManager.bbj::PropertiesManager
use com.basiscomponents.bc.BCBound
use com.basiscomponents.bc.IBCBound
use com.basiscomponents.bc.BCBinder


use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow

class public WindowCloseHandler implements IBCBound

    
    field protected BCBinder binder!
    field protected BBjWindow wnd!

    method public WindowCloseHandler(BBjWindow wnd!)
        #wnd! = wnd!
        wnd!.setCallback(BBjAPI.ON_CLOSE, #this!,"onClose")
    methodend
    
    rem -------------------------BCBinder methods--------------------------------
    method public void setBinder(BCBinder binder!)
        #binder! = binder!
    methodend    
    
    method public BCBinder getBinder()
        methodret #binder!
    methodend    
    
    method public void onSetData()
    methodend
   
    method public void onSetSelection()
    methodend
    
    method public Boolean canSetSelection()
        methodret BBjAPI.TRUE
    methodend
    
    method public Boolean canTerminate()
        methodret BBjAPI.TRUE
    methodend
    
    method public void onSignal(int signal!, Object payload!)
        if signal!=BCBinder.SIGNAL_TERMINATE then
            PropertiesManager.getInstance().terminate()
        endif
        if signal!=BCBinder.SIGNAL_DESTROY then
            release
        endif
    methodend
    
    method public DataRow getFieldsForWrite()
        methodret new DataRow()
    methodend
    
    rem -------------------------custom methods--------------------------------
    
    method public void onClose(BBjCloseEvent ev!)
        if #binder! = null() then methodret
        #binder!.sendSignal(BCBinder.SIGNAL_INITIATE_TERMINATE)
    methodend
    

classend