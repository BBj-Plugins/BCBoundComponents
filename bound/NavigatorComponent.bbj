use ::BusinessUIComponents/AbstractBCBoundWidget.bbj::AbstractBCBoundWidget
use ::BusinessUIComponents/configurations/IUIPropertiesManager.bbj::IUIPropertiesManager
use ::BusinessUIComponents/configurations/UIPropertiesManager.bbj::UIPropertiesManager
use ::BBjGridExWidget/BBjGridExWidget.bbj::BBjGridExWidget
use com.basiscomponents.bc.BCBound
use com.basiscomponents.bc.BCBinder

use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow

rem /**
rem  * A sample BBj Widget Implementation
rem  */
class public NavigatorComponent extends AbstractBCBoundWidget

REM     field private BBjNavigator nav!
    field private BBjToolButton btn_first!
    field private BBjToolButton btn_last!
    field private BBjToolButton btn_previous!
    field private BBjToolButton btn_next!
    field private BBjInputE     input_display!
    
    field private BBjVector keys!
    field private BBjVector keyLabels!
    
    rem --------------------- constructors -------------------------------------
    
    rem /**
    rem  * disabled default constructor
    rem  */
    method private NavigatorComponent()
    methodend

    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem * @param BBjInt id: the control ID
    rem * @param BBjInt x: x-location
    rem * @param BBjInt y: y-location
    rem * @param BBjInt w: width
    rem * @param BBjInt h: height
    rem */
    method public NavigatorComponent(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!,y!,w!,h!)
    methodend
    

    rem ---------------------- methods from BBjWidget -------------------------------- 

    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)
        if (f_init!) then
            #generateNavigator(100,0,0,#getWidth(),#getHeight(),"navigate")
            #btn_first!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onNavFirst")
            #btn_last!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onNavLast")
            #btn_previous!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onNavPrev")
            #btn_next!.setCallback(BBjAPI.ON_TOOL_BUTTON_PUSH,#this!,"onNavNext")
            if #getUIPropertiesManager() = null() then #setUIPropertiesManager(UIPropertiesManager.getInstance())
        FI
        #resizeComponents(#getWidth(),#getHeight())
    methodend
    
    rem /**
    rem  * updating properties from properties manager
    rem  */
    method protected void updateProperties()
            #btn_first!.setImageFile(#getUIPropertiesManager().getNavigatorBtnFirstImage())
            #btn_previous!.setImageFile(#getUIPropertiesManager().getNavigatorBtnPreviousImage())
            #btn_last!.setImageFile(#getUIPropertiesManager().getNavigatorBtnLastImage())
            #btn_next!.setImageFile(#getUIPropertiesManager().getNavigatorBtnNextImage())
            size = num(#getUIPropertiesManager().getNavigatorBtnFirstSize())
            #btn_first!.setImageSize(size, size)
            size = num(#getUIPropertiesManager().getNavigatorBtnPreviousSize())
            #btn_previous!.setImageSize(size, size)
            size = num(#getUIPropertiesManager().getNavigatorBtnLastSize())
            #btn_last!.setImageSize(size, size)
            size = num(#getUIPropertiesManager().getNavigatorBtnNextSize())
            #btn_next!.setImageSize(size, size)
    methodend
    
    method private void generateNavigator(BBjNumber ID, BBjNumber x, BBjNumber y, BBjNumber width, BBjNumber height, String title!)
        #btn_first!     = #getCanvas().addToolButton(#getCanvas().getAvailableControlID(), x,y,height,height,"")
        #btn_previous!  = #getCanvas().addToolButton(#getCanvas().getAvailableControlID(), x + height,y,height,height,"")
        #btn_last!      = #getCanvas().addToolButton(#getCanvas().getAvailableControlID(), x + width - height,y,height,height,"")
        #btn_next!      = #getCanvas().addToolButton(#getCanvas().getAvailableControlID(), x + width - (2 * height) ,y,height,height,"")
        displayWidth!   = #btn_next!.getX() - #btn_previous!.getX() - height
        #input_display! = #getCanvas().addInputE(#getCanvas().getAvailableControlID(), x + (2 * height),y,displayWidth!,height,"")
    methodend
    
    method public void resizeComponents(BBjNumber width!, BBjNumber height!)
        x = 0
        y = 0
        if width! < (4*height!) then
            width! = 4*height!
        endif
        #btn_first!.setLocation(x,y)
        #btn_first!.setSize(height!, height!)
        #btn_previous!.setLocation(x + height!,y)
        #btn_previous!.setSize(height!, height!)
        #btn_last!.setLocation(x + width! - height!,y)
        #btn_last!.setSize(height!, height!)
        #btn_next!.setLocation(x + width! - (2 * height!),y)
        #btn_next!.setSize(height!, height!)
        #input_display!.setLocation(x + (2 * height!),y + 1)
        displayWidth!   = #btn_next!.getX() - #btn_previous!.getX() - height!
        #input_display!.setSize(displayWidth!, height! - 2)
REM         #btn_first!.setImageSize(height!, height!)
REM         #btn_previous!.setImageSize(height!, height!)
REM         #btn_last!.setImageSize(height!, height!)
REM         #btn_next!.setImageSize(height!, height!)
    methodend

    method private void updateScreen()
        sel! = #getBinder().getSelection()
        rs! = #getBinder().getRS()
        if rs! <> null() then
            max = rs!.size()
        else
            max = 0
        endif
        if sel! <> null() then
            count = sel!.size()
        else
            count = 0
        endif
        text! = str(count) + " of " + str(max) + " selected. "
        declare DataRow firstSel!
        if count = 1 then
REM             firstSel! = cast(DataRow, rs!.get(sel!.get(0)))
REM             text! = text! + ": " + firstSel!.toJson(0)
                text! = text! + #getRowDescription()
        endif
        #input_display!.setText(text!)
    methodend
    
    method protected String getRowDescription()
        #scanKeysAndLabels()
        sel! = #getBinder().getSelection()
        rs! = #getBinder().getRS()
        firstSel! = cast(DataRow, rs!.get(sel!.get(0)))
        rowDescription! = "("
        if #keys!.isEmpty() then methodret ""
        for i=0 to #keys!.size() - 1
            key! = #keys!.get(i)
            label! = #keyLabels!.get(i)
            value! = firstSel!.getFieldAsString(key!)
            rowDescription! = rowDescription! + label! + ":" + value! + ", "
        next i
        rowDescription! = rowDescription!.substring(0,rowDescription!.length() - 2) + ")"
        methodret rowDescription!
    methodend
    
    method private void scanKeysAndLabels()
        if #keys! <> null() then methodret
        #keys! = new BBjVector()
        #keyLabels! = new BBjVector()
        attributes! = #getBinder().getBC().getAttributesRecord()
        fieldNames! = attributes!.getFieldNames()
        
        it! = fieldNames!.iterator()
        while it!.hasNext()
            fieldName! = it!.next()
            
            label! = ""; editable! = ""
            editable! = attributes!.getFieldAttribute(fieldName!, "EDITABLE",err=*next)
            label! = attributes!.getFieldAttribute(fieldName!, "LABEL",err=*next)
            
            rem no key field? continue
            if !editable!.trim().equals("2") then continue
            #keys!.add(fieldName!)
            
            rem if field has no label: use fieldname as label
            if label!.trim().equals("")  then
                #keyLabels!.add(fieldName!)
            else
                #keyLabels!.add(label!)
            endif
        wend
    methodend
    
    method public void onSetData()
        #updateScreen()
    methodend

    method public void onSetSelection()
        #updateScreen()
    methodend

    method public void onNavFirst( BBjToolButtonPushEvent ev! )
        #getBinder().setSelection(BCBinder.SEL_FIRST)
    methodend
    
    method public void onNavNext ( BBjToolButtonPushEvent ev! )
        #getBinder().setSelection(BCBinder.SEL_NEXT)
    methodend
    
    method public void onNavPrev( BBjToolButtonPushEvent ev! )
        #getBinder().setSelection(BCBinder.SEL_PREVIOUS)
    methodend
    
    method public void onNavLast( BBjToolButtonPushEvent ev! )
        #getBinder().setSelection(BCBinder.SEL_LAST)
    methodend

classend