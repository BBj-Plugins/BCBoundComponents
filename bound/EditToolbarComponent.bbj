use ::BusinessUIComponents/bound/AbstractBCBoundWidget.bbj::AbstractBCBoundWidget
use com.basiscomponents.bc.BCBound
use com.basiscomponents.bc.BCBinder
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow
use com.basiscomponents.i18n.Props



rem /**
rem  * A sample BBj Widget Implementation
rem  */
class public EditToolbarComponent extends AbstractBCBoundWidget

    field protected BBjChildWindow btn_new!
    field protected BBjChildWindow btn_save!
    field protected BBjChildWindow btn_delete!
    field protected BBjChildWindow btn_refresh!
    field protected BBjChildWindow btn_blank!
    field protected Boolean btn_new_enabled! = Boolean.TRUE
    field protected Boolean btn_save_enabled! = Boolean.TRUE
    field protected Boolean btn_delete_enabled! = Boolean.TRUE
    field protected Boolean btn_refresh_enabled! = Boolean.TRUE
    field protected Boolean btn_blank_enabled! = Boolean.FALSE
    field private Boolean dirty! = BBjAPI.FALSE
    field private Props props! = Props.getInstance()
    rem --------------------- constructors -------------------------------------
    rem /**
    rem  * disabled default constructor
    rem  */
    method private EditToolbarComponent()
    methodend
    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem * @param BBjInt id: the control ID
    rem * @param BBjInt x: x-location
    rem * @param BBjInt y: y-location
    rem * @param BBjInt w: width
    rem * @param BBjInt h: height
    rem */
    method public EditToolbarComponent(BBjWindow wnd!, BBjInt id!, BBjInt x!, BBjInt y!, BBjInt w!, BBjInt h!)
        #super!.create(wnd!,id!,x!,y!,w!,h!)
    methodend

    rem /**
    rem  * The constructor that creates the widget on wnd!
    rem * @param BBjWindow wnd!: parent window
    rem */
    method public EditToolbarComponent(BBjChildWindow wnd!)
        #super!.create(wnd!)
    methodend    
    
    rem ---------------------- methods from BBjWidget --------------------------------
    rem /**
    rem  * @Override
    rem  * This method is called whenever the widget needs to be rendered
    rem  * @param Boolean f_init!: if TRUE the control is rendered for the first time so this method has to perform initial rendering
    rem  */
    method public void redraw(Boolean f_init!)

        if (f_init!) then
            
            #getCanvas().addPanelStyle("tbar")
                                    
            #btn_new! =  #getCanvas().addChildWindow(80,0,0,100,80,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #btn_new!.addPanelStyle("tbn")
            #btn_new!.setStyle("width","fit-content")
            #btn_new!.setStyle("width","-moz-fit-content")
            img! = #btn_new!.addStaticText(101,0,0,48,48,"add")
            img!.addStyle("material-icons")
            #btn_new!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onBtnNew")

            #btn_save! =  #getCanvas().addChildWindow(81,0,0,100,80,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #btn_save!.addPanelStyle("tbn")
            #btn_save!.setStyle("width","fit-content")
            #btn_save!.setStyle("width","-moz-fit-content")
            img! = #btn_save!.addStaticText(101,0,0,48,48,"save")
            img!.addStyle("material-icons")
            #btn_save!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onBtnSave")
            
            #btn_delete! =  #getCanvas().addChildWindow(82,0,0,100,80,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #btn_delete!.addPanelStyle("tbn")
            #btn_delete!.setStyle("width","fit-content")
            #btn_delete!.setStyle("width","-moz-fit-content")
            img! = #btn_delete!.addStaticText(101,0,0,48,48,"delete")
            img!.addStyle("material-icons")
            #btn_delete!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onBtnDelete")            

            #btn_refresh! =  #getCanvas().addChildWindow(83,0,0,100,80,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
            #btn_refresh!.addPanelStyle("tbn")
            #btn_refresh!.setStyle("width","fit-content")
            #btn_refresh!.setStyle("width","-moz-fit-content")
            img! = #btn_refresh!.addStaticText(101,0,0,48,48,"refresh")
            img!.addStyle("material-icons")
            #btn_refresh!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onBtnRefresh")
            
REM             #btn_blank! =  #getCanvas().addChildWindow(84,0,0,100,80,"",$00100800$,BBjAPI().getSysGui().getAvailableContext())
REM             #btn_blank!.addPanelStyle("tbn")
REM             #btn_blank!.setStyle("width","fit-content")
REM             #btn_blank!.setStyle("width","-moz-fit-content")
REM             img! = #btn_blank!.addStaticText(101,0,0,48,48,"material-design-icons/content/1x_web/ic_add_circle_outline_white_48dp.png")
REM             #btn_blank!.setCallback(BBjAPI.ON_MOUSE_DOWN,#this!,"onBtnBlank")   
            
            
            #enableControls()
        endif

    methodend


    method public void setEnabledButtons(Boolean btn_blank_enabled!, Boolean btn_new_enabled!, Boolean btn_save_enabled!, Boolean btn_delete_enabled!, Boolean btn_refresh_enabled!)
        #btn_new_enabled! = btn_new_enabled!
        #btn_save_enabled! = btn_save_enabled!
        #btn_delete_enabled! = btn_delete_enabled!
        #btn_refresh_enabled! = btn_refresh_enabled!
        #btn_blank_enabled! = btn_blank_enabled!
    methodend

    method private void enableControls()
        if #getBinder() <> null() then
            #btn_new!.setEnabled(#dirty! = BBjAPI.FALSE)
            #btn_save!.setEnabled(#dirty!)
            #btn_delete!.setEnabled(#getBinder().getSelection().size()>0)
        endif
    methodend

    method public void onBtnNew( BBjEvent ev! )
        #getBinder().sendSignal(BCBinder.SIGNAL_NEW)
    methodend

    method public void onBtnRefresh( BBjEvent ev! )
        #getBinder().retrieve()
    methodend

    method public void onBtnBlank( BBjEvent ev! )
        #getBinder().sendSignal(BCBinder.SIGNAL_BLANK)
    methodend

    method public void onBtnSave( BBjEvent ev! )
        #dirty! = BBjAPI.FALSE
        #getBinder().sendSignal(BCBinder.SIGNAL_SAVE, err=*next)
        #enableControls()
        binder! = #getBinder()
        bc! = binder!.getBC()
        filter! = bc!.getFilter(err=*next)
        rem if a filter is set, retrieve again, because the newly written record might be filtered out
        if filter! <> null() and !filter!.isEmpty() then
            binder!.retrieve()
        endif
    methodend

    method public void onBtnDelete( BBjEvent ev! )
        text! = #props!.getText("EDIT_TOOLBAR_DIALOG_DELETE_DATA")
        header! = #props!.getText("EDIT_TOOLBAR_DIALOG_HEADER")
        action = msgbox(text!, 33, header!);rem 33 = 1:ok+cancel, 32:?icon
        switch action
            case 1
                #getBinder().sendSignal(BCBinder.SIGNAL_DELETE)
                break
            case 2
                break
            case default
                break
        swend
    methodend

    method public void onSignal(int signal!, Object payload!)
        if signal! = BCBinder.SIGNAL_DIRTY then
            #dirty! = BBjAPI.TRUE
        endif

        if signal! = BCBinder.SIGNAL_DELETE then
            #dirty! = BBjAPI.FALSE
        endif

        if signal! = BCBinder.SIGNAL_SAVE then
            #dirty! = BBjAPI.FALSE
        endif

        #enableControls()
    methodend

    method public void onSetSelection()
        #enableControls()
    methodend

    method public void onSetData()
        #enableControls()
    methodend

    method public Boolean canTerminate()
        methodret #canSetSelection()
    methodend

    method public Boolean canSetSelection()
        if #dirty! then
            text! = #props!.getText("EDIT_TOOLBAR_DIALOG_SAVE_DATA")
            header! = #props!.getText("EDIT_TOOLBAR_DIALOG_HEADER")
            action = msgbox(text!, 35, header!);rem 33 = 3:yes+no+cancel, 32:?icon
            switch action
                case 6
                    rem action = YES
                    #onBtnSave(null())
                    methodret Boolean.TRUE
                case 7
                    rem action = NO
                    #dirty! = BBjAPI.FALSE
                    #enableControls()
                    methodret Boolean.TRUE
                case 2
                    rem action = CANCEL
                    methodret BBjAPI.FALSE
                case default
                    methodret BBjAPI.FALSE
            swend
        endif

        methodret BBjAPI.TRUE
    methodend

classend