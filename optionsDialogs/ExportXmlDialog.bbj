REM /**
REM  * ExportPdfDialog.bbj
REM  * @author mneu
REM  *
REM  */

use ::BusinessUIComponents/optionsDialogs/Dialog.bbj::Dialog
use ::BusinessUIComponents/BusinessGrid.bbj::BusinessGrid

use ::FileChooser/FileChooser.bbj::FileChooser

use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.ResultSetExporter
use com.basiscomponents.db.util.DataRowJsonMapper

use java.io.FileWriter

use com.google.gson.Gson
use com.google.gson.JsonElement
use com.google.gson.JsonObject

class public ExportXmlDialog extends Dialog

    field private BBjInputE ieRootTagName!
    field private BBjInputE ieEntityName!
    
    field private FileChooser fileChooser!
    
    method public ExportXmlDialog(BBjString pgmName$, BusinessGrid grid!, Boolean embedded!)
        #super!(pgmName$, grid!, embedded!)
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#getpgmName() + "_XML_" + str(#getembedded()) + "_user_action", #this!, "onFileChooserFinish")
    
    methodend
    
    method public ExportXmlDialog(BBjString pgmName$, Boolean embedded!)
        #super!(pgmName$, embedded!)
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#getpgmName() + "_XML_" + str(#getembedded()) + "_user_action", #this!, "onFileChooserFinish")
    methodend

    method public void createDialogWindow()
        #createDialogWindow("Export Xml", 155)
        wnd! = #getmainWindow()
        wnd! = cast(BBjTopLevelWindow, #buildEmbed(wnd!))
        #fillFormWithConfigurations()
        #addBaseButtons(115)
        #setCallbacks()
    methodend
    
    method private BBjWindow buildEmbed(BBjWindow wnd!)
        wnd!.addStaticText(2010, 8, 15, 150, 23, "Root tag name")
        #ieRootTagName! = wnd!.addInputE(3010, 170, 15, 90, 23)
        
        wnd!.addStaticText(2020, 8, 40, 150, 23, "Entity name")
        #ieEntityName! = wnd!.addInputE(3020, 170, 40, 90, 23)
        
        methodret wnd!
    methodend
    
    method public BBjWindow getEmbedded(BBjWindow wnd!)
        #setMainWindow(#buildEmbed(wnd!))
        #fillFormWithConfigurations()
        #setCallbacks()
        methodret #getmainWindow()
    methodend
    
    method protected void setCallbacks()
        #super!.setCallbacks()
    methodend
    
    method public void onExportButtonPush(BBjButtonPushEvent ev!)
        if info(3,6) = "5" then
            #export(#getpgmName() + ".xml")
        else
            dirOnly = 0
            useSaveDialog = 1
            if #getembedded() then dirOnly = 1, useSaveDialog = 0
            path$ = #getPATH()
            if #getcustomSaveLocation() <> "" then path$ = #getcustomSaveLocation()
            #fileChooser! = new FileChooser(path$, 10, 10, #getpgmName() + "_XML_" + str(#getembedded()), 1, dirOnly, 0, useSaveDialog)
        endif
    methodend
    
    method public BBjString getRootTagName()
        methodret #ieRootTagName!.getText()
    methodend
    
    method public void setRootTagName(BBjString rootTagName$)
        #ieRootTagName!.setText(rootTagName$)
    methodend
    
    method public BBjString getEntityName()
        methodret #ieEntityName!.getText()
    methodend
    
    method public void setEntityName(BBjString entityName$)
        #ieEntityName!.setText(entityName$)
    methodend
    
    method public BBjString getSaveLocation()
        methodret #stSaveLocation!.getText()
    methodend
    
    method protected void fillFormWithConfigurations()
        config$ = #getConfigurations("xml")
        if config$ = "" then methodret
        
        dr! = DataRowJsonMapper.fromJson(config$)
        dr! = cast(DataRow, dr!.getField("xml").getValue())
        #ieRootTagName!.setText(dr!.getFieldAsString("rootTagName"))
        #ieEntityName!.setText(dr!.getFieldAsString("entityName"))
    methodend
    
    method public void onFileChooserFinish(BBjNamespaceEvent ev!)
        val! = ev!.getNewValue()
        
        switch val!
            case "::SAVE::"
            case "::OPEN::"
                chosenDirOrFilePath! = #fileChooser!.getSelectedFile()
                break
            case "::CANCEL::"
                rem do nothing
                methodret
                break
        swend
        
        if !chosenDirOrFilePath!.toLowerCase().endsWith(".xml") then chosenDirOrFilePath! = chosenDirOrFilePath! + ".xml"
        #export(chosenDirOrFilePath!)
    methodend
        
    method private void export(BBjString chosenDirOrFilePath!)
        #disableDialogButtons()
        
        rs! = #getgrid().getGrid().getRS()
REM         if rs! = null() or rs!.isEmpty() then methodret
        
        rootTagName! = #ieRootTagName!.getText()
        entityName! = #ieEntityName!.getText()
        
        if rootTagName!.trim().equals("") or entityName!.trim().equals("") then methodret
        
        if info(3,6) = "5" then
			tempFile! = java.io.File.createTempFile("tempFile", ".xml")
			tempFile!.createNewFile()
			writer! = new FileWriter(tempFile!)
		else
			writer! = new FileWriter(chosenDirOrFilePath!)
		endif
        
        #getexporter().writeXML(rs!, rootTagName!, entityName!, writer!)
		writer!.flush()
		writer!.close()
		
		if info(3,6) = "5" then
			fs! = bbjapi().getThinClient().getClientFileSystem() 
			cf! = fs!.getClientFile(chosenDirOrFilePath!) 
			cf!.copyToClient(tempFile!.getAbsolutePath())
		endif
		
        #saveConfiguration()
        #getmainWindow().destroy()
    methodend
    
    method private void saveConfiguration()
        json! = new JsonObject()
        json!.add("xml", new JsonObject())
        
        xml! = json!.getAsJsonObject("xml")
        xml!.addProperty("rootTagName", #getRootTagName())
        xml!.addProperty("entityName", #getEntityName())
        
        #saveConfiguration(new Gson().toJson(json!), "xml")
    methodend

classend