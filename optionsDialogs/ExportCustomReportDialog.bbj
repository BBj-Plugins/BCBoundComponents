REM /**
REM  * ExportCustomReportDialog.bbj
REM  * @author mneu
REM  *
REM  */

use ::BusinessUIComponents/BusinessGrid.bbj::BusinessGrid

use ::BBjGridExWidget/BBjGridExWidgetState.bbj::BBjGridExWidgetState

use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet

use com.basiscomponents.db.BBArrayList
use com.basiscomponents.db.ResultSetExporter
use com.basiscomponents.db.export.SheetConfiguration
use com.basiscomponents.db.export.ReportDetails
use com.basiscomponents.db.export.ColumnWidthCalculator

use net.sf.jasperreports.engine.JRField
use net.sf.jasperreports.engine.JasperReport
use net.sf.jasperreports.engine.JRDataSource
use net.sf.jasperreports.engine.JasperCompileManager
use net.sf.jasperreports.engine.JasperFillManager

use ::FileChooser/FileChooser.bbj::FileChooser

use java.io.File

use java.nio.file.Paths
use java.nio.file.Path

class public ExportCustomReportDialog

    field private static BBjString PATH$ = java.lang.System.getProperty("user.home") + "/documents/"

    field private BBjWindow mainWindow!
    field private Boolean embedded! = Boolean.FALSE
    
    field private BusinessGrid grid!
    field private BBjString pgmName$
    
    field private FileChooser fileChooser!
    field private FileChooser fileChooserJasperReport!
    
    field private BBjButton btnReportLocation!
    field private BBjStaticText stReportLocation!
    
    field private BBjButton btnExport!
    field private BBjButton btnCancel!
    
    field private Boolean showsBaristaHeader! = Boolean.FALSE
    field private ResultSetExporter exporter! = new ResultSetExporter()

    method public ExportCustomReportDialog(BBjString pgmName$, BusinessGrid grid!, Boolean embedded!)
        #pgmName$ = pgmName$
        #grid! = grid!
        #embedded! = embedded!
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#pgmName$ + "_CUSTOM_" + str(#embedded!) + "_user_action", #this!, "onFileChooserFinish")
        ns!.setCallbackForVariable(#pgmName$ + "_CUSTOM_JASPER_" + str(#embedded!) + "_user_action", #this!, "onFileChooserJasperReportFinish")
    methodend
    
    method public ExportCustomReportDialog(BBjString pgmName$, Boolean embedded!)
        #pgmName$ = pgmName$
        #embedded! = embedded!
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#pgmName$ + "_CUSTOM_" + str(#embedded!) + "_user_action", #this!, "onFileChooserFinish")
        ns!.setCallbackForVariable(#pgmName$ + "_CUSTOM_JASPER_" + str(#embedded!) + "_user_action", #this!, "onFileChooserJasperReportFinish")
    methodend

    method public void createDialogWindow()
        sysGui! = BBjAPI().getSysGui()
        declare BBjTopLevelWindow wnd!
        wnd! = cast(BBjTopLevelWindow, sysGui!.addWindow(sysGui!.getAvailableContext(),10,10,600,130,"Export Pdf"))
        wnd!.setCallback(BBjAPI.ON_CLOSE, #this!, "onClose")
        wnd!.setResizable(0)
        
        wnd! = cast(BBjTopLevelWindow, #buildEmbed(wnd!))
        
        #btnExport! = cast(BBjButton, wnd!.addButton(5010, 270, 90, 150, 23, "Export"))
        #btnCancel! = cast(BBjButton, wnd!.addButton(6010, 440, 90, 150, 23, "Cancel"))
        
        #mainWindow! = wnd!
        #setCallbacks()
    methodend
    
    method private BBjWindow buildEmbed(BBjWindow wnd!)
        #btnReportLocation! = wnd!.addButton(2040, 8, 15, 150, 23, "Custom report")
        #stReportLocation! = wnd!.addStaticText(3040, 170, 15, 400, 23, "")
        
        methodret wnd!
    methodend
    
    method public BBjWindow getEmbedded(BBjWindow wnd!)
        #mainWindow! = #buildEmbed(wnd!)
        #setCallbacks()
        methodret #mainWindow!
    methodend
    
    method private void setCallbacks()
        #btnReportLocation!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "onCustomReportButtonPush")
    
        if !#embedded! then
            #btnExport!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "onExportButtonPush")
            #btnCancel!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "onCancelButtonPush")
        endif
    methodend
    
    method public void onCustomReportButtonPush(BBjButtonPushEvent ev!)
        dirOnly = 0
        useSaveDialog = 0
        if #embedded! then dirOnly = 1, useSaveDialog = 0
        #fileChooserJasperReport! = new FileChooser(#PATH$, 10, 10, #pgmName$ + "_CUSTOM_JASPER_" + str(#embedded!), 1, dirOnly, 0, useSaveDialog)
    methodend
    
    method public void onExportButtonPush(BBjButtonPushEvent ev!)
        report! = #stReportLocation!.getText()
        if report!.trim().equals("") then methodret

        if info(3,6) = "5" then
            #export(#getpgmName() + ".pdf")
        else
            dirOnly = 0
            useSaveDialog = 1
            #fileChooser! = new FileChooser(#PATH$, 10, 10, #pgmName$ + "_CUSTOM_" + str(#embedded!), 1, dirOnly, 0, useSaveDialog)
        endif
    methodend
    
    method public void onCancelButtonPush(BBjButtonPushEvent ev!)
        #mainWindow!.destroy()
    methodend
    
    method public void onClose(BBjEvent ev!)
        #mainWindow!.destroy()
    methodend   
    
    method public BBjString getSaveLocation()
        methodret #stSaveLocation!.getText()
    methodend
    
    method public void onFileChooserFinish(BBjNamespaceEvent ev!)
        val! = ev!.getNewValue()
        
        switch val!
            case "::SAVE::"
            case "::OPEN::"
                chosenDirOrFilePath! = #fileChooser!.getSelectedFile()
                break
            case "::CANCEL::"
                rem do nothing
                methodret
                break
        swend
        
        if !chosenDirOrFilePath!.toLowerCase().endsWith(".pdf") then chosenDirOrFilePath! = chosenDirOrFilePath! + ".pdf"
        
        #export(chosenDirOrFilePath!)
    methodend
        
    method private void export(BBjString chosenDirOrFilePath!)
        #disableDialogButtons()
        
        rs! = #grid!.getGrid().getRS()
        if rs! = null() or rs!.isEmpty() then methodret
        report! = #stReportLocation!.getText()
		
		if info(3,6) = "5" then
			fs! = bbjapi().getThinClient().getClientFileSystem() 
			cf! = fs!.getClientFile(report!) 
			reportPath$ = cf!.copyFromClient("customReport" + str(System.currentTimeMillis()) + ".jrxml")
            System.out.println(reportPath$)
		endif

        rem TODO: wie triggern wir das neue resultset, welches die felder des reports beinhaltet? kein controller vorhanden!
        rem exporting
        declare File outputFile!

        if info(3,6) = "5" then
            outputFile! = new File("report.pdf")
            outputFile! = #exporter!.exportToPDFByCustomReport(outputFile!, reportPath$, rs!)
        else
            outputFile! = #exporter!.exportToPDFByCustomReport(chosenDirOrFilePath!, report!, rs!)
        endif

		if info(3,6) = "5" then
			fs! = bbjapi().getThinClient().getClientFileSystem() 
			cf! = fs!.getClientFile("report.pdf") 
			cf!.copyToClient(outputFile!.getAbsolutePath())
		endif

        bbjapi().getThinClient().browse(outputFile!.getAbsolutePath().replace("\", "/"))
        #mainWindow!.destroy()
    methodend
    
    method public void onFileChooserJasperReportFinish(BBjNamespaceEvent ev!)
        val! = ev!.getNewValue()
        
        switch val!
            case "::SAVE::"
            case "::OPEN::"
                chosenDirOrFilePath$ = #fileChooserJasperReport!.getSelectedFile()
                break
            case "::CANCEL::"
                rem do nothing
                methodret
                break
        swend
        
        #stReportLocation!.setText(chosenDirOrFilePath$)
    methodend
    
    method protected void disableDialogButtons()
        #btnExport!.setEnabled(0)
        #btnCancel!.setEnabled(0)
    methodend
    
    method protected void enableDialogButtons()
        #btnExport!.setEnabled(1)
        #btnCancel!.setEnabled(1)
    methodend

classend