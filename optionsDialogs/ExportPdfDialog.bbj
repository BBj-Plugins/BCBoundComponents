REM /**
REM  * ExportPdfDialog.bbj
REM  * @author mneu
REM  *
REM  */

use ::BusinessUIComponents/optionsDialogs/Dialog.bbj::Dialog
use ::BusinessUIComponents/BusinessGrid.bbj::BusinessGrid
use ::FileChooser/FileChooser.bbj::FileChooser

use ::BBjGridExWidget/BBjGridExWidgetState.bbj::BBjGridExWidgetState

use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.util.DataRowJsonMapper

use com.basiscomponents.db.BBArrayList
use com.basiscomponents.db.ResultSetExporter
use com.basiscomponents.db.export.SheetConfiguration
use com.basiscomponents.db.export.ReportDetails
use com.basiscomponents.db.export.ColumnWidthCalculator

use java.io.File

use java.nio.file.Paths
use java.nio.file.Path

use com.google.gson.Gson
use com.google.gson.JsonElement
use com.google.gson.JsonObject

class public ExportPdfDialog extends Dialog

    field private BBjListButton lbPageFittingOptions!
    field private BBjListButton lbPageLayout!
    field private BBjInputN inFontSize!
    
    field private FileChooser fileChooser!
    
    field private Boolean showsBaristaHeader! = Boolean.FALSE

    method public ExportPdfDialog(BBjString pgmName$, BusinessGrid grid!, Boolean embedded!)
        #super!(pgmName$, grid!, embedded!)
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#getpgmName() + "_PDF_" + str(#getembedded()) + "_user_action", #this!, "onFileChooserFinish")
    methodend
    
    method public ExportPdfDialog(BBjString pgmName$, Boolean embedded!)
        #super!(pgmName$, embedded!)
        ns! = BBjAPI().getGroupNamespace()
        ns!.setCallbackForVariable(#getpgmName() + "_PDF_" + str(#getembedded()) + "_user_action", #this!, "onFileChooserFinish")
    methodend

    method public void createDialogWindow()
        #createDialogWindow("Export Pdf", 180)
        wnd! = #getmainWindow()
        wnd! = cast(BBjTopLevelWindow, #buildEmbed(wnd!))
        #fillFormWithConfigurations()
        #addBaseButtons(140)
        #setCallbacks()
    methodend
    
    method private BBjWindow buildEmbed(BBjWindow wnd!)
        wnd!.addStaticText(2010, 8, 15, 150, 23, "Page options")
        #lbPageFittingOptions! = wnd!.addListButton(3010, 170, 15, 150, 200, "")
        #lbPageFittingOptions!.setFieldHeight(23)
        #lbPageFittingOptions!.addItem("normal fitting")
        #lbPageFittingOptions!.addItem("fit to width")
        #lbPageFittingOptions!.addItem("fit to height")
        #lbPageFittingOptions!.addItem("fit to page")
        #lbPageFittingOptions!.selectIndex(0)
        
        wnd!.addStaticText(2020, 8, 40, 150, 23, "Font size")
        #inFontSize! = wnd!.addInputN(3020, 170, 40, 90, 23)
        #inFontSize!.setMask("##") ; rem max font size = 99
        #inFontSize!.setNegateable(Boolean.FALSE)
        
        wnd!.addStaticText(2030, 8, 65, 150, 23, "Page layout")
        #lbPageLayout! = wnd!.addListButton(3030, 170, 65, 150, 200, "")
        #lbPageLayout!.setFieldHeight(23)
        #lbPageLayout!.addItem("portrait")
        #lbPageLayout!.addItem("landscape")
        #lbPageLayout!.selectIndex(0)
        
        methodret wnd!
    methodend
    
    method public BBjWindow getEmbedded(BBjWindow wnd!)
        #setMainWindow(#buildEmbed(wnd!))
        #fillFormWithConfigurations()
        #setCallbacks()
        methodret #getmainWindow()
    methodend
    
    method protected void setCallbacks()
        #super!.setCallbacks()
    methodend
    
    method public void onExportButtonPush(BBjButtonPushEvent ev!)
        if info(3,6) = "5" then
            #export(#getpgmName() + ".pdf")
        else
            dirOnly = 0
            useSaveDialog = 1
            if #getembedded() then dirOnly = 1, useSaveDialog = 0
            path$ = #getPATH()
            if #getcustomSaveLocation() <> "" then path$ = #getcustomSaveLocation()
            #fileChooser! = new FileChooser(path$, 10, 10, #getpgmName() + "_PDF_" + str(#getembedded()), 1, dirOnly, 0, useSaveDialog)
        endif
    methodend   
    
    method public void setBaristaHeaderVisible(Boolean visible!)
        #showsBaristaHeader! = visible!
    methodend
    
    method public BBjNumber getSelectedFittingOption()
        methodret #lbPageFittingOptions!.getSelectedIndex()
    methodend
    
    method public void setSelectedFittingOption(BBjNumber index)
        #lbPageFittingOptions!.selectIndex(index)
    methodend
    
    method public BBjNumber getFontSize()
        methodret #inFontSize!.getValue()
    methodend
    
    method public void setFontSize(BBjNumber fontSize)
        #inFontSize!.setValue(fontSize)
    methodend
    
    method public BBjNumber getSelectedPageLayout()
        methodret #lbPageLayout!.getSelectedIndex()
    methodend
    
    method public void setSelectedPageLayout(BBjNumber index)
        #lbPageLayout!.selectIndex(index)
    methodend
    
    method public BBjString getSaveLocation()
        methodret #stSaveLocation!.getText()
    methodend
    
    method protected void fillFormWithConfigurations()
        config$ = #getConfigurations("pdf")
        if config$ = "" then methodret
        
        dr! = DataRowJsonMapper.fromJson(config$)
        dr! = cast(DataRow, dr!.getField("pdf").getValue())
        #lbPageFittingOptions!.selectIndex(dr!.getFieldAsNumber("fitting").intValue())
        #inFontSize!.setValue(dr!.getFieldAsNumber("fontSize"))
        #lbPageLayout!.selectIndex(dr!.getFieldAsNumber("pageLayout").intValue())
    methodend
    
    method public void onFileChooserFinish(BBjNamespaceEvent ev!)
        val! = ev!.getNewValue()
        switch val!
            case "::SAVE::"
            case "::OPEN::"
                chosenDirOrFilePath! = #fileChooser!.getSelectedFile()
                break
            case "::CANCEL::"
                rem do nothing
                methodret
                break
        swend
        
        if !chosenDirOrFilePath!.toLowerCase().endsWith(".pdf") then chosenDirOrFilePath! = chosenDirOrFilePath! + ".pdf"
        
        #export(chosenDirOrFilePath!)
    methodend
    
    method private void export(BBjString chosenDirOrFilePath!)
        #disableDialogButtons()
        
        rs! = #getgrid().getGrid().getRS()
REM         if rs! = null() or rs!.isEmpty() then methodret
        
        path! = Paths.get(chosenDirOrFilePath!)
        outputFilename$ = path!.getFileName().toString()
		if path!.getParent() <> null() then
			path$ = path!.getParent().toString() + "/"
		else
			path$ = ""
		endif
        
        dr! = rs!.get(0)
        
        rem creating SheetConfiguration
        declare SheetConfiguration sheetConfiguration!
        sheetConfiguration! = new SheetConfiguration()
        
        fieldWidths! = ColumnWidthCalculator.calculateColumnWidths(rs!, #inFontSize!.getValue())

        visibleRowsVec! = #getgrid().getGrid().getColumnState().getVisibleColumns()
        for i = visibleRowsVec!.size() - 1 to 0 step - 1
            fieldName$ = visibleRowsVec!.get(i)
            header! = dr!.getDataField(fieldName$).getAttribute("LABEL")
            if header! = null() then header! = fieldName$
            width = fieldWidths!.getFieldAsNumber(fieldName$)
            sheetConfiguration!.insertColumn(header!, width, fieldName$, k)
        next i
        
        sheetConfiguration!.setReportDetails(new ReportDetails(0, "reportName", "tableName", "0000000000000000000001"))
        sheetConfiguration!.setFontSize(#inFontSize!.getValue())
        
        fitTo = #lbPageFittingOptions!.getSelectedIndex()
        
        rem exporting
        declare File outputFile!
        outputFile! = #getexporter().exportToPDF(outputFilename$, path$, rs!, sheetConfiguration!, #showsBaristaHeader!, fitTo, #lbPageLayout!.getSelectedIndex())

		if info(3,6) = "5" then
			fs! = bbjapi().getThinClient().getClientFileSystem() 
			cf! = fs!.getClientFile(chosenDirOrFilePath!) 
			cf!.copyToClient(outputFile!.getAbsolutePath())
		endif
		
		bbjapi().getThinClient().browse(outputFile!.getAbsolutePath().replace("\", "/"))
        #saveConfiguration()
        #getmainWindow().destroy()
    methodend
    
    method private void saveConfiguration()
        json! = new JsonObject()
        json!.add("pdf", new JsonObject())
        
        pdf! = json!.getAsJsonObject("pdf")
        pdf!.addProperty("fitting", str(#getSelectedFittingOption()))
        pdf!.addProperty("fontSize", str(#getFontSize()))
        pdf!.addProperty("pageLayout", str(#getSelectedPageLayout()))
        
        #saveConfiguration(new Gson().toJson(json!), "pdf")
    methodend
    
classend