REM /**
REM  * ExportButton.bbj
REM  * @author mneu
REM  *
REM  */

use ::BusinessUIComponents/BusinessGrid.bbj::BusinessGrid

use ::BusinessUIComponents/optionsDialogs/ExportDialog.bbj::ExportDialog

use java.util.HashMap

use ::BusinessUIComponents/configurations/CustomConfigurationsBC.bbj::CustomConfigurationsBC

use com.basiscomponents.db.ResultSetExporter
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.util.DataRowJsonMapper
use com.basiscomponents.db.export.SheetConfiguration
use com.basiscomponents.db.export.ReportDetails
use com.basiscomponents.db.export.ColumnWidthCalculator
use com.basiscomponents.db.BBArrayList

class public ExportButton

    field private BBjMenuButton exportButton!
    field private BusinessGrid grid!
    field private CustomConfigurationsBC cfgBC!
    field private BBjString pgmName$
    field private HashMap customReports!

    field private ExportDialog export!
    
    field private BBjWindow mainWindow!
    
    field private Boolean baristaHeaderVisible! = Boolean.FALSE

    method public ExportButton(BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber width, BBjNumber height)
        #exportButton! = wnd!.addMenuButton(id, x, y, width, height, "Export")
        #exportButton!.setCallback(BBjButton.ON_BUTTON_PUSH, #this!, "onExportButtonPush")
        #mainWindow! = wnd!
    methodend
    
    method public void onExportButtonPush(BBjEvent ev!)
        if #export! = null() then
            #export! = new ExportDialog(#pgmName$, #grid!, #customReports!)
            #export!.setConfigurationsBC(#cfgBC!)
        endif
    
        #export!.createDialogWindow()
    methodend
    
    method public void setGrid(BusinessGrid grid!)
        #grid! = grid!
    methodend
    
    method public void setBC(CustomConfigurationsBC cfgBC!)
        #cfgBC! = cfgBC!
    methodend
    
    
    method public void setBaristaHeaderVisible(Boolean visible!)
        #baristaHeaderVisible! = visible!
        
        if #exportPdfDialog! = null() then
            #exportPdfDialog! = new ExportPdfDialog(#grid!, Boolean.FALSE)
        endif
        
        #exportPdfDialog!.setBaristaHexerVisible(#baristaHeaderVisible!)
    methodend
    
    method public void setProgramName(BBjString pgmName$)
        #pgmName$ = pgmName$
    methodend
    
    method public void setImageFile(BBjString imageFilePath$)
        #exportButton!.setImageFile(imageFilePath$)
        #setImageSize(#exportButton!.getWidth()-4, #exportButton!.getWidth()-4)
    methodend

    method public void setImage(BBjImage image!)
        #exportButton!.setImage(image!)
        #setImageSize(#exportButton!.getWidth()-4, #exportButton!.getWidth()-4)
    methodend
    
    method public void setSize(BBjNumber width, BBjNumber height)
        #exportButton!.setSize(width, height)
        #setImageSize(width-4, height-4)
    methodend
    
    method public void setImageSize(BBjNumber width, BBjNumber height)
        #exportButton!.setImageSize(width, height)
    methodend
    
    method public void setBackColor(BBjColor color!)
        #exportButton!.setBackColor(color!)
    methodend
    
    method public void setCustomReports(HashMap customReports!)
        #customReports! = customReports!
    methodend
    
    method public BBjMenuButton getButton()
    	methodret #exportButton!
    methodend
    
classend